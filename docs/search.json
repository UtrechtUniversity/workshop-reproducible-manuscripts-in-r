[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Writing a Reproducible Manuscript in R",
    "section": "",
    "text": "Welcome\nOpen Science practices are becoming increasingly popular in the way research is conducted. This workshop provides a start for those interested in a transparent and reproducible workflow for communicating their research.\nWe will dive into R Markdown and it’s capabalities in writing a fully reproducible manuscript."
  },
  {
    "objectID": "installation-and-setup.html",
    "href": "installation-and-setup.html",
    "title": "1  Installation & Setup",
    "section": "",
    "text": "For this workshop, the following programs and packages should be installed and ready to use:\n\nR\nRStudio\nThe rticles package\nThe prereg package (optional)\nThe usethis package\nThe penguins package\nThe tidyverse package\nZotero\nBetter BibTex for Zotero"
  },
  {
    "objectID": "introduction.html#what-are-the-advantages",
    "href": "introduction.html#what-are-the-advantages",
    "title": "2  Introduction",
    "section": "2.1 What are the advantages?",
    "text": "2.1 What are the advantages?\n\nOne major benefit is the elimination of human error in copying and pasting results, as automated methods can update results, figures, and tables with major revisions.\n\nUsing an automated method for scraping APA-formatted stats out of PDFs, Nuijten et al. (⊕2016) found that over 10% of p-values in published papers were inconsistent with the reported details of the statistical test, and 1.6% were what they called “grossly” inconsistent, e.g. difference between the p-value and the test statistic meant that one implied statistical significance and the other did not. Nearly half of all papers had errors in them.\n\nThe use of reproducible documents also allows for easy revisions and specification of desired figures and tables.\n\nWhen revisions are requested, one might have to tweak tables and figures by hand constantly, leading to a major incentive never to rerun analyses because it would mean re-pasting and re-illustratoring all the numbers and figures in a paper.\n\nFurthermore, computational reproducibility is promoted, which allows others to easily verify and replicate research findings.\n\nWhile programming environments may seem counter-intuitive for writing papers, they ultimately prevent mistakes and save time.\nReference: “RMarkdown for Writing Reproducible Scientific Papers” (n.d.)\n\n\n\n\n“RMarkdown for Writing Reproducible Scientific Papers.” n.d. Accessed April 18, 2023. https://libscie.github.io/rmarkdown-workshop/handout.html."
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "3  Getting Started",
    "section": "",
    "text": "1. Create a project in RStudio\n\nIn RStudio, click File -> New Project -> New Directory -> New Project.\nGive your project directory a clear name, preferably without spaces.\nMake sure your project directory folder is created (as a subdirectory) in an accessible place on your system.\nSelect Open project in a new session.\n\n2. Create a project structure suited for reproducible work\n\nYou can generate a directory structure by running the following piece of code in you R console:\n\n\ndir.create(\"data\", recursive = TRUE)\ndir.create(\"docs\", recursive = TRUE)\ndir.create(\"results\", recursive = TRUE)\ndir.create(\"R\", recursive = TRUE)\n\nlibrary(usethis)\n\nusethis::use_readme_md(open = rlang::is_interactive())\nusethis::use_mit_license(copyright_holder = NULL)\n\n3. Place your data in the correct folder\n\nlibrary(palmerpenguins)\n\nwrite.csv(palmerpenguins::penguins_raw, \"data/data.csv\")\n\n4. Create a R Markdown document for your manuscript.\n\nIn RStudio, click File -> New File -> R Markdown\nClick on ‘From Template’ and scroll through the available options and select the MDPI Journal Article\nName the directory for this document (and associated files) as manuscript and ensure that it will be located in the docs folder.\n\n5. Familiarize yourself with the R Markdown document and associated files\n\nYAML Header\nSections\nBibliography"
  },
  {
    "objectID": "writing.html#markdown-syntax",
    "href": "writing.html#markdown-syntax",
    "title": "4  Writing",
    "section": "4.1 Markdown Syntax",
    "text": "4.1 Markdown Syntax\nIf you’re not familiar with Markdown, you can familiarize yourself with it in a couple of minutes using the following link: https://learnxinyminutes.com/docs/markdown/.\nAdditionally, you can use the Visual Editor option in RStudio to see Markdown syntax previewed in it’s final format as you write.\nSome things you can do with Markdown:\n\nHeadings can be created for sections and subsections using the # hashtag character. So # Heading 1 for a top-level heading and ## Heading 2 for a second-level heading and so on.\nText can be formatted in italic or bold using the * asterisk character.\nBullet point lists can be created with a - hyphen or * asterisk for each line in the list.\nLinks can be embedded by writing in the following way: insert text which should be hyperlinked\nPlain code can be embedded in text using the ``` backtick character. R code can be embedded as well, but we will cover that in the next section."
  },
  {
    "objectID": "writing.html#rendering",
    "href": "writing.html#rendering",
    "title": "4  Writing",
    "section": "4.2 Rendering",
    "text": "4.2 Rendering\nYou can render the R Markdown document to it’s specified output format using the Knit button in RStudio’s editor toolbar.\nYou can also use the render function documented in the following page: https://pkgs.rstudio.com/rmarkdown/reference/render.html"
  },
  {
    "objectID": "writing.html#output-formats-options",
    "href": "writing.html#output-formats-options",
    "title": "4  Writing",
    "section": "4.3 Output Formats & Options",
    "text": "4.3 Output Formats & Options\nR Markdown enables numerous output formats, of which the most relevant are:\n\npdf_document\nhtml_document\nword_document\n\nThe output formats can be specified in the YAML header. If using a template from the rticles package, it will be automatically specified.\nIn a reproducible project, the human-generated content (manuscript) is kept separate from the project-generated content (result). Adding the code below to the end of your YAML header will ensure that your R Markdown document is rendered to the results folder.\n\nknit: (function(input, ...) {\n    rmarkdown::render(\n      input,\n      output_dir = \"../../results\"\n    )\n  })\n\nMoreover, it is possible to specify multiple output formats for simulatenous rendering:\n\nThe code chunk below specifies the MDPI article and a Word document as the output formats.\n\n\noutput: \n  rticles::mdpi_article: default \n  word_document: default\nknit: (function(input, ...) {\n    rmarkdown::render(\n      input,\n      output_format = \"all\",\n      output_dir = \"../../results/output\"\n    )\n  })\n\n\nThe code chunk below specifies R Markdown’s default pdf & Word documents as the output formats.\n\n\noutput: \n  pdf_document: default \n  word_document: default\nknit: (function(input, ...) {\n    rmarkdown::render(\n      input,\n      output_format = \"all\",\n      output_dir = \"../../results/output\"\n    )\n  })\n\n\n4.3.1 Exercise\nSince we don’t have time to write a whole manuscript from scratch, we have prepared some text that you can use to build up a dummy manuscript.\n\nCopy the text below and paste it into the right location(s) in your R Markdown document. Where necessary, clean up the original template by removing redundant text and formatting.\nTry using Markdown syntax to:\n\nformat your manuscript with appropriate sections and subsections (headers),\nplay around with bold and italic text,\nmake a couple of bullet points,\nembed a link.\n\n\nRemember that you can use the Visual Editor option in RStudio if it helps.\n\nAdjust the output argument in the YAML header and render the document to the results folder in HTML format to see what it looks like. If there’s time, try rendering to either the MDPI article template by itself or simultanous HTML & Word output.\n\nAbstract\n\nPenguins are a group of flightless birds that are highly adapted to living in the harsh environments of the Southern Ocean. However, these iconic animals are facing numerous threats, including climate change, which is altering their habitats and affecting their survival. In this study, we assessed the impact of climate change on penguin populations by analyzing long-term data on penguin abundance, distribution, and breeding success. Our results show that changes in sea ice extent and ocean temperature have had a significant impact on the distribution and abundance of penguin populations, with some species experiencing declines in population size and reproductive success. These findings highlight the vulnerability of penguins to climate change and the urgent need for conservation efforts to protect these charismatic and important species. We suggest that future research should focus on developing effective management strategies to mitigate the impacts of climate change on penguin populations and their habitats.\n\nIntroduction\n\nPenguins are awesome. They are birds but too cool to fly, so they rather swim. \n\nMethods\n\nWe collected data on three morphological traits of penguins: body mass, flipper length, and bill length. We measured these traits in a total of 200 individual penguins from three different species: Adelie, Gentoo, and Chinstrap.\n\nResults  \n\nOur data show significant differences in body mass, flipper length, and bill length among the three penguin species. Adelie penguins were found to be the smallest in body mass, flipper length, and bill length, while Chinstrap penguins were the largest in these traits. Gentoo penguins were intermediate in size for all three traits.\n \nDiscussion\n\nOur findings suggest that the observed differences in penguin morphological traits may be related to differences in foraging behavior and habitat use among the species. Adelie penguins, for example, feed primarily on krill, which may require a smaller body size and bill length for efficient feeding. Chinstrap penguins, on the other hand, feed on a more diverse range of prey, including fish and krill, which may explain their larger size and longer bill length. Our study highlights the importance of considering species-specific adaptations and behaviors when studying penguin morphology and ecology."
  },
  {
    "objectID": "analysis.html#code-chunk-options",
    "href": "analysis.html#code-chunk-options",
    "title": "5  Analysis",
    "section": "5.1 Code Chunk Options",
    "text": "5.1 Code Chunk Options\nChunks can be customized using the following options:\n\ninclude = FALSE prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.\necho = FALSE prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.\nmessage = FALSE prevents messages that are generated by code from appearing in the finished file.\nwarning = FALSE prevents warnings that are generated by code from appearing in the finished.\nfig.cap = \"...\" adds a caption to graphical results.\n\nThe code chunk option has to be specified within the top chunk delimiter: ```{r}\nFor example, ```{r echo=FALSE, warning=TRUE}"
  },
  {
    "objectID": "analysis.html#inline-code",
    "href": "analysis.html#inline-code",
    "title": "5  Analysis",
    "section": "5.2 Inline Code",
    "text": "5.2 Inline Code\nCode results or quick calculations can be inserted directly into the text of a R Markdown by enclosing the code with r. When the document is rendered, the results of the inline code will be displayed but not the code itself. There will be no additional text formatting either, which makes the inline code output indistinguishable from surrounding text.\nInline code is a great option for reporting results in text in a reproducible way, while minimizing errors.\n\n5.2.1 Exercise\nLike the previous exercise, we’re providing some code that you could place in your R Markdown document.\n\nFirst, insert a setup code chunk t the beginning of your document (i.e. below the YAML header) to specify the working directory.\nUse the following workflow for the rest of the script:\n\ncreate a code chunk in the Results section of your document,\ncopy a piece/section of the script and paste it into the code chunk,\nrun the code chunk and see if it works alright,\nrepeat the previous three steps until the whole dummy script has been incorporated within code chunks in your manuscript.\n\nRender the document and check the output.\nPlay around with different code chunk options. Which chunk option would hide the code and only show results, as you might like in a final manuscript?\nInsert a sentence or two in the Results section about the mean flipper length and mean bill length. Use inline R code to:\n\ncalculate the mean flipper length within the text itself\nreport the mean bill length directly from the mean data frame\n\nRender the document again and observe the differences with the code chunks and inline code.\n\n\nknitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file()) #setup code chunk\n\nread.csv('data/data.csv')\n\nstr(penguins)\n# this is our data set\n\n# let's analyze the data\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# summarize them\npenguins %>% \n        count(species)\n\n# exclude NAs\n\npenguins <- na.omit(penguins)\n\n# let's do some quick averages\n\nfl_mean <- round(mean(flipper_length_mm))\nbl_mean <- round(mean(bill_length_mm))\n\nmean <- data.frame(fl_mean, bl_mean)\n\n# mutate the dataset\n\n## let's calculate the ratio between body mass and flipper length and bill length and bill depth\n\npenguins <- penguins %>% \n                mutate(fl_b_ratio = flipper_length_mm / body_mass_g,\n                       bill_length_depth = bill_length_mm / bill_depth_mm)\n\npenguins\n\n# let's visualize the data\n\n## let's plot species vs body mass color coded by sex\n\npenguin_weight <- ggplot( data = penguins, aes( x = species, y = body_mass_g, color = sex)) +\n          geom_point() +\n  scale_color_manual(values = c(\"yellow\",\"purple\")) +\n  labs(x = \"Species\",\n       y = \"Body mass (g)\",\n       title = \"Penguin species weight\")\npenguin_weight\n\n## let's plot bill length vs depth\n\nbill_len_dep <- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm, group = species)) +\n  geom_point(aes(color = species, shape = sex), size = 3, alpha = 0.8) +\n  #geom_smooth(method = \"lm\", se = FALSE, aes(color = species)) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(title = \"Penguin bill dimensions\",\n       subtitle = \"Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER\",\n       x = \"Bill length (mm)\",\n       y = \"Bill depth (mm)\",\n       color = \"Penguin species\",\n       shape = \"Penguin species\") +\n  theme(legend.position = c(0.85, 0.15),\n        plot.title.position = \"plot\",\n        plot.caption = element_text(hjust = 0, face= \"italic\"),\n        plot.caption.position = \"plot\")\nbill_len_dep\n\n## let's compare the flipper length distribution between the different species\n\nflipper_hist <- ggplot(data = penguins, aes(x = flipper_length_mm)) +\n  geom_histogram(aes(fill = species), \n                 alpha = 0.5, \n                 position = \"identity\") +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Flipper length (mm)\",\n       y = \"Frequency\",\n       title = \"Penguin flipper lengths\")\nflipper_hist\n\n## have a figure already ready in a folder and want to add it here: \n\nknitr::opts_knit$set(root.dir = \"path/to/your/project\")\n\nknitr::include_graphics(\"figures/your_figure_file_name.png\")"
  },
  {
    "objectID": "referencing.html#working-with-bibtex-keys",
    "href": "referencing.html#working-with-bibtex-keys",
    "title": "6  Referencing",
    "section": "6.1 Working with BibTex keys",
    "text": "6.1 Working with BibTex keys\nR Markdown works with bibliographies in the form of .bib files. .bib files stand for BibTeX Bibliographical Database files. They are text files which contain a list of references in the form of BibTex keys.\nA typical BibTex key might look like the following:\n@article{nash51,\n  author  = \"Nash, John\",\n  title   = \"Non-cooperative Games\",\n  journal = \"Annals of Mathematics\",\n  year    = 1951,\n  volume  = \"54\",\n  number  = \"2\",\n  pages   = \"286--295\"\n}\nHere is an example BibTex key for a reference used in this workshop:\n@misc{RMarkdownWritingReproducible,\n    title = {{RMarkdown} for writing reproducible scientific papers},\n    url = {https://libscie.github.io/rmarkdown-workshop/handout.html},\n    urldate = {2023-04-18},\n    file = {RMarkdown for writing reproducible scientific papers:C\\:\\\\Users\\\\Moope001\\\\Zotero\\\\storage\\\\SJITSZZI\\\\handout.html:text/html},\n}\nIn practice, your .bib file should be updated along the way to include the BibTex keys for all your references. You can cite a specific reference using the the @ character with the key/idenitifier in the first line of the entry.\nFor the above examples, it would be @nash51 and @RMarkdownWritingReproducible\n\n6.1.1 Exercise\nFor this exercise, we will update our .bib file manually and making a citation. Note that this workflow can be made more efficient using Zotero and BetterBibTex for Zotero as described in the section after the exercise.\n\nSearch for the paper related to the Palmer Penguins data in Google Scholar:\n\nHorst, A. M., Hill, A. P., & Gorman, K. B. (2022). Palmer Archipelago Penguins Data in the palmerpenguins R Package-An Alternative to Anderson’s Irises. R JOURNAL, 14(1), 244-254.\n\nFind the BibTex key for this paper and copy it into your existing .bib file.\nCite the Palmer Penguins paper in your manuscript.\nRender the document and see how it looks."
  },
  {
    "objectID": "referencing.html#using-zotero-better-bibtex-for-zotero",
    "href": "referencing.html#using-zotero-better-bibtex-for-zotero",
    "title": "6  Referencing",
    "section": "6.2 Using Zotero & Better BibTex for Zotero",
    "text": "6.2 Using Zotero & Better BibTex for Zotero\n\nSet up Zotero\n\nInstall Zotero on your computer\nInstall the Zotero connector with Chrome (unless you want to input your papers manually)\nCreate a Zotero account (Zotero webpage)\nSync your account with your local Zotero installation (in Zotero preferences -> sync)\n\nInstall the “Better Bibtex” plugin\n\nDownload the Zotero-better-bibtex-6.7.75.xpi file from here: https://github.com/retorquere/zotero-better-bibtex/releases/tag/v6.7.75\nFollow the installation instructions here: https://retorque.re/zotero-better-bibtex/installation/\n\nSet up your library and collect bibliography material\n\nCreate a new folder inside your Zotero library to collect all the materials relevant to your study\nCollect studies in your new folder using Zotero connector or adding the material manually to your library\n\nCreate a .bib file (bibliography file)\n\nIn your Zotero local app, right click on your new folder -> Export Collection\nChoose format BibText and click Okay\nChoose a destination folder. The destination folder MUST be the same of your R Markdown file\n\nInclude the .bib file into your R Markdown and quote studies\n\nIn the YAML lines (the ones between ———) of your R markdown template look for the keyword “bibliography”. Write your just created .bib file (without quotes) after “:”\nWhen you need to quote a material, look inside the bib file, look at the first line after the very first left curly bracket “{“ and, in the markdown text, write @, where  is the line of text after “{“. NOTE: this very first line of text does not appear in the bibliography printed on your final paper, it is a sort of nickname you use to quote paper and it can be set up to whatever word/sentence you like (but try to avoid empty space and use underscores _ instead)\nAlternatively, when using the Visual Editor option - you can use the citation dialog/option to insert citations directly."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "“RMarkdown for Writing Reproducible Scientific\nPapers.” n.d. Accessed April 18, 2023. https://libscie.github.io/rmarkdown-workshop/handout.html."
  }
]